# -*- coding: utf-8 -*-
"""boj 2822.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cW53AvanJnjiP5yjmR4QhP3IC4VGQJb9

# 백준 2822번 - 점수계산

- 풀이는 총 두 가지를 준비해 보았습니다.

- 공유하고자하는 핵심 스킬은 python에서 '내포기능' 입니다.
"""

# sol1) 기본풀이

# 8개 줄에 걸쳐서 각 문제에 대한 참가자의 점수가 주어지므로
# 빈리스트를 준비하고 append로 추가하며 input()을 8번 반복하는 형식으로 받겠습니다.

nlist = []
for _ in range(8):
  nlist.append(int(input()))

# 8개의 점수중 가장 높은 점수 5개의 합을 구하는 문제
# 점수의 정렬 이후 index 기준으로 3~7번의 합을 구하면 될 것입니다.

# nlist를 정렬
sorted_list = sorted(nlist)

# index 3부터 끝까지 합을 구함
answer = sum(sorted_list[3:])

# 문제 번호를 띄어쓰기로 출력해야하는 상황, 문제번호는 index+1에 해당합니다!
# list에는 index를 찾을 수 있는 기능이 있습니다.

# 빈리스트를 준비하고 해당 index+1(문제번호) 값을 하나하나 찾아 append로 추가하는 코드입니다.
index_list = []
for n in sorted_list[3:]:
  
  #index_list라는 list에 append 한다. 무엇을? nlist에서 n이 위치하는 index + 1 값을 추가
  index_list.append(nlist.index(n) + 1)

# 최종 정답과, 해당 index_list를 오름차순으로 정렬하여 출력해야하므로
# index_list를 정렬 한 후 print(*list) 형식으로 출력하면 list의 요소들이 띄어쓰기로 출력됩니다.
print(answer)
print(*sorted(index_list))

"""sol1) 전체 코드

백준에서는 input값을 sys 모듈을 사용하여 받으면 더 빠르게 받을 수 있습니다.

sys모듈을 사용하여 인풋값을 받는 코드를 추가 하였습니다.
"""

# sol1) 전체 코드

import sys

input = sys.stdin.readline

nlist = []
for _ in range(8):
  nlist.append(int(input()))

sorted_list = sorted(nlist)
answer = sum(sorted_list[3:])

index_list = []
for n in sorted_list[3:]:
  index_list.append(nlist.index(n) + 1)

print(answer)
print(*sorted(index_list))

"""# 내포기능

내포 기능이란?

파이썬에서 리스트, 딕셔너리와 같은 타입의 변수를 만들 때 코드를 직관적으로 보이게 할 뿐 아니라 '실행속도'가 증가하는 기능입니다.

- 왜 증가하는지는 스스로..탐구하는 쪽으로 가봅시다!
"""

# 내포기능 예시

#list 1번과 2번은 같은 리스트 입니다.

list_1 = []

for i in range(8):
  list_1.append(i)

list_2 = [i for i in range(8)]


# 직접 코드를 실행 시켜보며 확인해주세요
# for문이 반복하는 횟수가 증가 할 수록 리스트를 만들어내는 시간에서 차이가 발생합니다.
print(list_1)
print(list_2)

"""## 내포기능 예제 1

list형식 일 때

[ '리스트에 들어갈 원소' for _ in ...과같은 반복문] 형식으로 구성 되어있습니다.
"""

# 내포기능 예제 1

# 다음 리스트 내포형식으로 구성된 리스트의 출력 결과를 상상하며 코드를 돌려보세요.

x1 = [0 for i in range(5)]

x2 = [i*2 for i in range(5)]

x3 = [i**2 for i in range(5)]

x4 = ['*'*i for i in range(5)]


print("x1 :", x1)
print("x2 :", x2)
print("x3 :", x3)
print("x4 :", x4)

"""## 내포기능 예제 2

내포 기능 안에 조건문도 사용 할 수 있습니다.
"""

# 짝수 리스트 만들기
# 두개의 리스트 결과값은 동일 합니다.
even_list1 = [i for i in range(0, 10, 2)]

even_list2 = [i for i in range(10) if i%2 == 0]

print('even_list1 :', even_list1)
print('even_list2 :', even_list2)

"""# ** 내포기능으로 푼 2822번 sol 2"""

# sol2) 전체 코드
# 어떤 부분이 어떻게 바뀌었는지 이해하고 상상하면서 보시면 더 큰 도움이 될 것 같습니다.

import sys
input = sys.stdin.readline

nlist = [int(input()) for _ in range(8)]

sorted_list = sorted(nlist)
answer = sum(sorted_list[3:])

index_list = []
for n in sorted_list[3:]:
  index_list.append(nlist.index(n) + 1)

print(answer)
print(*sorted(index_list))

# 더 짧고 간결하게
import sys
input = sys.stdin.readline

nlist = [int(input()) for _ in range(8)]

sorted_list = sorted(nlist)[3:]
answer = sum(sorted_list)

index_list = [nlist.index(n)+1 for n in sorted_list]

print(answer)
print(*sorted(index_list))

"""# 내포는 무궁무진한 응용 방법이 있습니다.

- ex) 이중 for문 삼중 for문 - 잘쓰지는 않음 ..

- 딕셔너리 내포도 공유해드리고 싶은데 각자 스스로 터득해보는 방향으로 하겠습니다. 관련내용 질문은 언제나 환영입니다.

- 내포를 활용하면 어떤 코딩이 가능한지 활용 사례 한번 보여드리고 마무리 짓겠습니다.

- 주의) 짧은 코딩이 무조건 좋은건 아니라고 생각합니다.

https://school.programmers.co.kr/learn/courses/30/lessons/42748

# 어제(22.10.12) 공유해드린 프로그래머스 문제입니다. 
꼭 한번 풀어보시고 내포로 해결 한 답을 봐주시면 감사드립니다.

화살표로 펼치면 답을 볼 수 있습니다.
"""

# K번째 수 정답

def solution(array, commands):
    
    return [sorted(array[x-1:y])[z-1] for x,y,z in commands]